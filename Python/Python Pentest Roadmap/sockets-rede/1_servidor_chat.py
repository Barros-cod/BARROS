import socket
import threading

HOST = '127.0.0.1' # localhost
PORT = 65432       # Porta para o chat

clientes = []

def gerenciar_cliente(conn, addr):
    print(f"üõú - [NOVA CONEN√ÉO] {addr} conectado..")
    clientes.append(conn)

    try:
        while True:
            data = conn.recv(1024)
            if not data:
                print(f"‚ùå - [DESCONEX√ÉO] {addr} desconectou..")
                break

            menssage = data.decode('utf-8')
            print(f"[{addr}] {menssage}")

            broadcast(menssage, conn)

    except ConnectionResetError:
        print(f"[ERRO DE CONEX√ÉO] Conex√£o com {addr} foi resetada.")
    except Exception as e:
        print(f"[ERRO INESPERADO] Erro ao gerenciar {addr}: {e}")
    finally:
        conn.close()
        if conn in clientes:
            clientes.remove(conn)
        print(f"[CONEX√ÉO FECHADA] {addr} encerrado. Clientes ativos: {len(clientes)}")

def broadcast(mensagem, remetente_conn):
    for cliente_conn in clientes:
        if cliente_conn != remetente_conn:
            try:
                cliente_conn.sendall(f"Mensagem de {remetente_conn.getpeername()[0]}:{remetente_conn.getpeername()[1]}: {mensagem}".encode('utf-8'))
            except Exception as e:
                print(f"Erro ao enviar broadcast para {cliente_conn.getpeername()}: {e}")
                # Se der erro ao enviar, pode ser que o cliente tenha ca√≠do, remover
                cliente_conn.close()
                if cliente_conn in clientes:
                    clientes.remove(cliente_conn)

def iniciar_servidor():
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind((HOST, PORT))
        s.listen()

        print(f"Servidor de chat escutando em {HOST}:{PORT}")

        while True:
            conn, addr = s.accept()
            thread = threading.Thread(target=gerenciar_cliente, args=(conn, addr))
            thread.start()
            print(f"[CONEX√ÉO ATIVA] Total de threads ativas: {threading.active_count() - 1}") # -1 para n√£o contar a thread principal

if __name__ == "__main__":
    iniciar_servidor()
